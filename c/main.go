package main

import (
	"bufio"
	"bytes"
	"fmt"
	"os"
	"strconv"
)

func main() {
	scan := bufio.NewScanner(os.Stdin)

	scan.Scan()
	n, _ := strconv.Atoi(scan.Text())

	curNumber := make([]byte, 0, 10)

	for i := 0; i < n; i++ {
		scan.Scan()

		lineNumber := scan.Bytes()
		if !bytes.Equal(lineNumber, curNumber) {
			fmt.Printf("%s\n", lineNumber)
			curNumber = append(curNumber[:0], lineNumber...)
		}
	}
}

/*
Дан упорядоченный по неубыванию массив целых 32-разрядных чисел. Требуется удалить из него все повторения.

Желательно получить решение, которое не считывает входной файл целиком в память, т.е., использует лишь константный объем памяти в процессе работы.

Формат ввода
Первая строка входного файла содержит единственное число n, n ≤ 1000000.

На следующих n строк расположены числа — элементы массива, по одному на строку. Числа отсортированы по неубыванию.

Формат вывода
Выходной файл должен содержать следующие в порядке возрастания уникальные элементы входного массива.

Ввод:
5
2
4
8
8
8

Вывод:
2
4
8
*/
